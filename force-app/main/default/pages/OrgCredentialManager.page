<apex:page controller="OrgCredentialManagerController" showHeader="false" sidebar="false">
    <apex:sectionHeader title="Org Credential Manager" />
    <apex:form id="mainForm">

        <apex:pageMessages id="msgPanel" />

        <!-- Existing Credentials Section -->
        <apex:pageBlock title="Retrieve and Update Existing Credential" id="existingBlock">
            <apex:pageBlockSection columns="1">
                <apex:selectList value="{!selectedOrgName}" size="1" label="Select Org" id="orgSelect">
                    <apex:selectOptions value="{!orgOptions}" />
                    <apex:actionSupport event="onchange" action="{!loadSelectedCredential}"
                                        rerender="existingCredPanel,msgPanel" immediate="false" />
                </apex:selectList>
            </apex:pageBlockSection>

            <apex:outputPanel id="existingCredPanel">
                <apex:pageBlockSection columns="1" rendered="{!hasExistingCredential}">
                    <!-- Username Field -->
                    <apex:pageBlockSectionItem>
                        <apex:outputLabel value="Username" for="usernameField"/>
                        <apex:inputText id="usernameField" value="{!existingUsername}" style="width:200px"/>
                    </apex:pageBlockSectionItem>

                    <!-- Password Field with Copy Button -->
                    <apex:pageBlockSectionItem>
                        <apex:outputLabel value="Password" for="passwordDisplay"/>
                        <apex:outputPanel layout="block" style="display:flex;align-items:center;gap:8px;">
                            <apex:inputSecret id="realPasswordField" value="{!existingPassword}" style="display:none;"/>
                            <input type="password" id="passwordDisplay"
                                   value="{!passwordDisplay}"
                                   style="width:200px; height:22px; padding:2px; border:1px solid #ccc;"
                                   onfocus="this.type='text'; window.currentPassword = this.value;"
                                   onblur="this.type='password';"
                                   oninput="window.currentPassword = this.value; document.getElementById('{!$Component.mainForm.realPasswordField}').value = this.value;"/>

                            <button type="button" onclick="copyPasswordToClipboard(event)"
                                    style="background:#0176d3;color:white;border:none;border-radius:4px;padding:4px 8px;cursor:pointer;font-size:12px;">
                                Copy
                            </button>
                        </apex:outputPanel>
                    </apex:pageBlockSectionItem>

                    <!-- Update Button -->
                    <apex:pageBlockSectionItem>
                        <apex:outputLabel value=""/>
                        <apex:commandButton value="Update Credential" action="{!saveExistingCredential}"
                                            rerender="existingCredPanel,msgPanel"/>
                    </apex:pageBlockSectionItem>
                </apex:pageBlockSection>
            </apex:outputPanel>
        </apex:pageBlock>

        <apex:pageBlock title="Create New Credential" id="newCredBlock">
            <apex:pageBlockSection columns="1">
                <apex:inputText value="{!newOrgName}" label="Org Name" id="newOrgNameInput"/>
                <apex:inputText value="{!newUsername}" label="Username" id="newUsernameInput"/>
                <apex:inputSecret value="{!newPassword}" label="Password" id="newPasswordInput"/>
                <apex:commandButton value="Create Credential" action="{!createNewCredential}"
                                    rerender="msgPanel,orgSelect,existingBlock,newCredBlock"
                                    oncomplete="if(document.querySelector('.message.error')===null){
                                       document.getElementById('{!$Component.newOrgNameInput}').value='';
                                       document.getElementById('{!$Component.newUsernameInput}').value='';
                                       document.getElementById('{!$Component.newPasswordInput}').value='';
                                   }"/>
            </apex:pageBlockSection>
        </apex:pageBlock>

        <!-- JavaScript -->
        <script>
            // Store password globally for reliable access
            window.currentPassword = '';

            // Initialize password on page load
            function initPassword() {
                var realField = document.getElementById('{!$Component.mainForm.realPasswordField}');
                if (realField && realField.value) {
                    window.currentPassword = realField.value;
                    var displayField = document.getElementById('passwordDisplay');
                    if (displayField) displayField.value = window.currentPassword;
                }
            }

            // Reliable copy function
            function copyPasswordToClipboard(event) {
                try {
                    // First try the global variable
                    var passwordToCopy = window.currentPassword;

                    // Fallback to hidden field if needed
                    if (!passwordToCopy) {
                        var realField = document.getElementById('{!$Component.mainForm.realPasswordField}');
                        if (realField && realField.value) {
                            passwordToCopy = realField.value;
                        }
                    }

                    // Final fallback to display field
                    if (!passwordToCopy) {
                        var displayField = document.getElementById('passwordDisplay');
                        if (displayField) passwordToCopy = displayField.value;
                    }

                    if (!passwordToCopy) {
                        throw new Error('No password value found');
                    }

                    // Modern clipboard API
                    if (navigator.clipboard) {
                        navigator.clipboard.writeText(passwordToCopy)
                            .then(function() {
                                showCopySuccess(event.target);
                            })
                            .catch(function() {
                                fallbackCopy(passwordToCopy, event.target);
                            });
                    }
                    // Legacy fallback
                    else {
                        fallbackCopy(passwordToCopy, event.target);
                    }
                } catch(e) {
                    console.error('Copy failed:', e);
                    alert('Please ensure credentials are loaded by selecting an Org and try again.');
                }
            }

            function fallbackCopy(text, button) {
                var textarea = document.createElement('textarea');
                textarea.value = text;
                textarea.style.position = 'fixed';
                document.body.appendChild(textarea);
                textarea.select();
                try {
                    document.execCommand('copy');
                    showCopySuccess(button);
                } finally {
                    document.body.removeChild(textarea);
                }
            }

            function showCopySuccess(button) {
                button.textContent = 'Copied!';
                button.style.background = '#2e844a';
                setTimeout(function() {
                    button.textContent = 'Copy';
                    button.style.background = '#0176d3';
                }, 2000);
            }

            // Initialize on page load and after each rerender
            document.addEventListener('DOMContentLoaded', initPassword);
        </script>

    </apex:form>
</apex:page>